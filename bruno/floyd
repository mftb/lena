#! octave-interpreter-name -qf

# ======
# Func
# ======

function imgAfterFloyd = getImgAfterFloyd(img)
    imgAfterFloyd = img;

    numberOfRows = rows( img );
    numberOfColumns = columns( img );

    for lineIndex = 1 : numberOfRows
        for columnIndex = 1 : numberOfColumns

            # Varredura
            x = lineIndex;

            if( rem(lineIndex, 2) != 0 )
                y = columnIndex;
            else
                y = numberOfColumns - (columnIndex - 1);
            endif


            # Determinando o erro
            shadeAtPoint = img( x, y );

            if( shadeAtPoint > 128 )
                newShade = 255;
            else
                newShade = 0;
            endif

            error = shadeAtPoint - newShade;


            # Distribuindo o erro (desconsidera as bordas)
            imgAfterFloyd( x, y ) = newShade;

            if( y < numberOfColumns )
                imgAfterFloyd( x, y+1 ) = imgAfterFloyd( x, y+1 ) + (7/16) * error;
            endif

            if( y < numberOfColumns && x < numberOfRows )
                imgAfterFloyd( x+1, y+1 ) = imgAfterFloyd( x+1, y+1 ) + (1/16) * error;
            endif

            if( x < numberOfRows )
                imgAfterFloyd( x+1, y ) = imgAfterFloyd( x+1, y ) + (5/16) * error;
            endif

            if( y > 1 && x < numberOfRows )
                imgAfterFloyd( x+1, y-1 ) = imgAfterFloyd( x+1, y-1 ) + (3/16) * error;
            endif

        endfor
    endfor

endfunction

# ======
# Script
# ======

imgBaboon = imread( "../in/baboon.pgm" );
imgMonarch = imread( "../in/monarch.pgm" );

imgBaboonAfterFloyd = getImgAfterFloyd( imgBaboon );
imgMonarchAfterFloyd = getImgAfterFloyd( imgMonarch );

imwrite( imgBaboonAfterFloyd, "../out/floyd/baboon.pbm" );
imwrite( imgMonarchAfterFloyd, "../out/floyd/monarch.pbm" );

